
#include "my_arduino_lib.h"
#include "my_fnd_lib.h"

uint16_t cnt1 = 0;  // unsigned char
uint16_t t_loop = 0;
char key_buf;

struct clk
{
    int t_loop;
    char hour;
    char min;
    char sec;
}time = {0,1,24,30};

struct fg
{
  char tg_flag;
  char run_flag;
  char key_flag;
  char rx_end_flag;
}flag = {0,0,0,0};

struct counter
{
  unsigned char cnt8;
  int cnt16;
  char mode_cnt;
}cnt = {0, 0, 0};


char key_rd_byte()
{
  char buf = 0;
  Serial.println("called key_rd_byte()");                                      
  if((PINC & 0b00111100) != 0b00111100) // 0x3c ( A2, A3, A4, A5핀이 전체 1인 경우)
  {
    Serial.println('k');
    buf = (PINC & 0b00111100);
    while((PINC & 0b00111100) != 0b00111100) // 버튼이 눌러진 경우
    {
      Serial.println('Y');
      fnd_dis(cnt.cnt16); // 숫자표시
    }

    flag.key_flag = 1;
    Serial.println("buf:" + buf);
  }
  return buf;
}


void key_chk(){
  
  char k;
  flag.key_flag = 0;
  Serial.println('c');
/*                             |
  	         X   X    A5   A4  |  A3   A2  A1  A0  
  	         0   0    1     1  |   1    1   0   0
                               |
A2연결(D16)   0   0    1     1  |   1    0   0   0    (0x38)
A3연결(D17)   0   0    1     1  |   0    1   0   0    (0x34)
A4연결(D18)   0   0    1     0  |   1    1   0   0    (0x4c) 
A5연결(D19)   0   0    0     1  |   1    1   0   0    (0x1c)
*/
  
  switch(key_buf) {
	case 0x38: // up key = d16
    	Serial.println("called 0x38");
    	((flag.run_flag == 0) && (cnt.mode_cnt == 1 || cnt.mode_cnt == 4)) ? cnt.cnt16++: 1; k = 1 ;
    	break;
    
    case 0x34: // dn key = d17
    	Serial.println("called d17");
    	((flag.run_flag == 0) && (cnt.mode_cnt == 1)) ? cnt.cnt16--: k = 1;
    	break;

    case 0x2c: // run key = d18
    	Serial.println("called d18");
    	flag.run_flag == 0 ? flag.run_flag = 1: flag.run_flag = 0;
    	break;

    case 0x1c: // mode key = d19
    	Serial.println("called d19");
    	cnt.mode_cnt > 4 ? cnt.mode_cnt = 1 : cnt.mode_cnt++;
    	break;
    
  }
}


// 빨리 표시되는 것을 방지하기 위해 delay 처리
int time_cnt(int loop_nb, int val) {
  delay(1);
  t_loop++;

  if(t_loop > loop_nb) {
    t_loop = 0;
    val++;
  }
  return val;
}

void up_cnt_func() {
  cnt.cnt16 = time_cnt(200, cnt.cnt16);
  fnd_dis(cnt.cnt16);
  Serial.println("called up_cnt_func()");
}

void time_func() {
	Serial.println("called time_func()");
}

void gugudan_func() {
	Serial.println("called gugudan_func()");
}

void dn_cnt_func() {
	Serial.println("called dn_cnt_func()");
}

void setup() {
    // put your setup code here, to run once:
    DDRB = 0xff;
    PORTB = 0xff;
    DDRD = 0xff;
    DDRC = 0xff; // input mode

    Serial.begin(115200); // 9600
}

void loop() {

 /* 
// 실습4
_delay_ms(1);
time.t_loop++;
if(time.t_loop > 1000)  // 1sec chk sum
{ //if-1
  time.t_loop = 0;
  time.sec++;
  (tg_flag == 0) ? tg_flag = 1 : tg_flag = 0;
 if(time.sec > 59) // 1min chk
   { // if-2
     time.sec = 0;
     time.min++;    
    if(time.min > 59) // 1 hour chk sum
     { // if-3
       time.min = 0;
       time.hour++;
       if(time.hour > 23)
        { 
          time.hour = 0;
        }        
     } // if-3-end
   }  // if-2-end
} // if-1-end

Serial.println(String("1:") + String((time.min/10) * 1000));
Serial.println(String("2:") + String((time.min%10) * 100));
Serial.println(String("3:") + String((time.sec/10) * 10));
Serial.println(String("4:") + String((time.sec %10)));

fnd_dis_4(((time.min/10)*1000) + ((time.min%10) * 100) + ((time.sec/10) * 10) + (time.sec %10));
//fnd_time(time.min, time.sec);
*/

// 눌러진 스위치의 값 읽기
key_buf = key_rd_byte(); 
  
// 받아온 키값에 따라 digit + 또는 -, Flag값, Mode 값의 변경
if(flag.key_flag == 1) key_chk();
  
if(flag.run_flag == 1){
    switch(cnt.mode_cnt){
      case 1: up_cnt_func();  break; 
      case 2: time_func();    break; 
      case 3: gugudan_func(); break; 
      case 4: dn_cnt_func();  break; 
    }
}
fnd_dis(cnt.cnt16);
  
// 실습3
 delay(1);
 t_loop++;
if(t_loop > 100)
{
  t_loop = 0;
  cnt1++;
  (tg_flag == 0) ? tg_flag = 1 : tg_flag = 0;
}
fnd_dis_4(cnt1);


 // 실습2
 /*
 PORTD = fnd_font[cnt];   // mcu 방식
 byte_out(fnd_font[cnt]); // arduino 방식
 cnt++;
 if(cnt > 9) cnt = 0;
 Serial.println((cnt %10 + 0x30)-48);
 delay(500);
 */

// 실습1
//   PORTD = 0x06;
//  delay(500);
// PORTD = 0x38;  // L
// delay(500);
// PORTD = 0x66;
// delay(500);
}
